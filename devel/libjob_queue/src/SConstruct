import os
import os.path
import sys
sys.path += ["../../build"]
import global_config
from   global_config import LIBUTIL
from   global_config import LIBCONFIG
from   global_config import add_static_library
from   global_config import add_shared_library
from   global_config import add_header
from   global_config import get_target

package          = "job_queue"
lib_path         = "../lib"
slib_path        = "../slib"
include_path     = "../include"
bin_path         = "../bin"  


conf = global_config.get_conf(os.getcwd() , package , 2)
env  = Environment()
conf.update_env( env , [LIBCONFIG , LIBUTIL ] )
if conf.INCLUDE_LSF:
   env.Append( CPPDEFINES = ["INCLUDE_LSF"])
   env.Append( CPPPATH = conf.LSF_INCLUDE_PATH )

src_list    = Split("forward_model.c queue_driver.c job_queue.c lsf_driver.c local_driver.c rsh_driver.c ext_job.c ext_joblist.c")
header_list = Split("job_queue.h queue_driver.h lsf_driver.h local_driver.h rsh_driver.h ext_job.h ext_joblist.h forward_model.h")

add_static_library( env , conf , lib_path  , package , src_list )
add_shared_library( env , conf , slib_path , package , src_list )
add_header( env , conf , include_path , header_list )
target = get_target( env , conf )

