			Starting EnKF
                        =============


This document should describe how to get started using the EnKF
implementation from StatoilHydro to do history matching. 

Table of contents

 1. Basic startup.
 2. Files you need.
    2.1  Grid file  
    2.2  SCHEDULE file
    2.3  DATA file
      2.3.1  Include statements
      2.3.2  SOLUTION section
      2.3.3  RPTONLY / SKIPREST / RPTSOL
      2.3.4  MINPV/MINPVV
      2.3.5  The parameters to estimate
     (2.3.6  Optional: INCLUDE -> IMPORT)
 3. About the configuration file:
    3.1  About paths in the config file
    3.2  Basic configuration information
    3.3  Parameters to estimate 
    3.4  Observations
    3.4.1  Well rate observations from SCHEDULE
    3.4.2  Block observations (i.e. RFT)
    3.4.3  Observations of other summary variables.
    3.5  Overriding the site-config configuration
 4. Running it ...  




1. Basic startup 
   -------------
   Start with typing 'enkf' on the command line; if you get command
   not found you must go and nag on your enkf-administrator.

   If the enkf application is installed OK you should get an error
   message like this:

     main: usage ./enkf config_file

     ****************************************************************************
     **                                                                        **
     **  A fatal error occured in the EnKF program, and we have to abort.      **
     **  We now *try* to provide a backtrace, which would be very useful       **
     **  when debugging. The process of making a (human readable) backtrace    **
     **  is quite complex, among other things it involves several calls to the **
     **  external program addr2line. We have arrived here because the program  **
     **  state is already quite broken, so the backtrace might be (seriously)  **
     **  broken as well. In particular it is not thread safe:                  **
     **                                                                        **
     ****************************************************************************
     --------------------------------------------------------------------------------
      #00 util_abort(..) in /h/a152128/EnKF/devel/EnKF/libutil/src/util.c:2387
      #01 main      (..) in /h/a152128/EnKF/devel/EnKF/libenkf/src/main.c:55
     --------------------------------------------------------------------------------
     Abort

   That is because the enkf application requires a configuration file
   as the first and only argument. A large part of the remaining part
   of this document is related to this configuration file.


2. Before you can start the EnKF simulation you need some files from
   an ordinary ECLIPSE simulation on the same model. Some of the files
   must be edited a bit before the simulation can start.

   2.1 The EnKF simulation needs a grid file from an existing
       simulation. The EnKF application can use both EGRID and GRID
       files - of both formatted and unformatted type.

       The grid file is (presently) used to map out active/inactive
       cells. This means that the grid file must contain an accurate
       description of the active and inactive cells. If the
       MINPV/MINPVV keywords are used in the datafile the consistency
       between the GRID file and the GRID section in the ECLIPSE can
       be a bit tricky. See details in section 2.3.1.

   2.2 The SCHEDULE file is used to force the ECLIPSE simulation in
       the normal way, in addition the EnKF application parses the
       SCHEDULE file and reads historical rates from the WCONHIST
       keywords. One time-step for EnKF application corresponds to one
       DATES keyword in the schedule file, this means that the longer
       DATES periods in the SCHEDULE file, the longer time the EnKF
       simulation will take.

       The SCHEDULE file can be used nearly unchanged, but please
       ensure the following:

         o The file should end with 'END'.
         o It is only allowed with one schedule file, nested SCHEDULE
           files will not be parsed correctly.
         o The files often seem to have a really confused opinion of
           which end-of line convention to use. The program eol-fix.x
           does a quite decent job.

   2.3 There are several alterations which must be done to the
       datafile prior to starting the EnKF application.

       2.3.1 The EnKF simulations will be run 'all-over-place'
             filesystem wise, it is therefor *STRONGLY* advised to
             replace all relative paths in include statements with
             absolute paths.

       2.3.2 The (ECLIPSE)-init of the simulations are different for
             the first time step and the following timesteps, this
             implies that the SOLUTION section in the datafile must
             be updated between the first and the second timestep:

               First timestep: The solution section must have the
               'EQUIL' keyword for ECLIPSE to calculate the initial
               fluid distribution (alternatively they can be imported
               from an external application).

               Remaining timesteps: The solution section must contain
               a 'RESTART ' keyword.

             The way we have solved this with the EnKF application is
             that you should replace the existing initialization code
             (i.e. typically an EQUIL keyword) with the string
             <INIT>. This is then replaced with the correct code by
             EnKF automagically(?!) (but - see comment about INIT in
             section 3.3).

       2.3.3 There are a couple of keywords which MUST be present in
             the DATAFILE for EnKF to operate correctly.

             RPTONLY: This keyword must be present in the SUMMARY
             section of the datafile. This keyword ensures that
             ECLIPSE writes date to the summary file only at the
             report steps; for EnKF it essential to have temporal
             consistency between summary data and restart data, and
             currently this is enforced with the use of this keyword. 

             SKIPREST: This keyword must be in the SCHEDULE section,
             typically just before the actual SCHEDULE content. If
             this keyword is not present restarts will not work
             correctly. 

             RPTSOL: This keyword controls the output of restart
             files/reports (I think there are actually several nearly
             identical keywords here). This works at least:

             RPTSOL
                 RESTART=2 /

     
       2.3.4 The MINPV/MINPVV keywords. (This section only applies if
             you are attempting to estimate the PORO and/or the MULTPV
             keywords - however that is a quite common thing to do.)
             When you specify a value for MINPV, all cells with pore
             volume below this limit will become inactive, when the
             ensemble members have different values for PORO/MULTPV
             the spatial distribution of active/inactive cells will
             vary (slightly) among the members, and then ** ALL HELL
             IS LOOSE **.

	     The following approach to MINPV/MINPVV is suggested:

	     1. Run the base case model with the MINPV/MINPVV keywords
                present and produce an EGRID file by using the
                GRIDFILE keyword. (If you already have an EGRID file
                you can use that one).

	     2. Remove MINPV/MINPVV from the datafile.

             3. Run the following command:
 
                  bash% kw_extract.x <EGRID_FILE> <OUTPUT_FILE> COORD ZCORN ACTNUM 
                         
                This will extract the ECLIPSE variables COORD, ZCORN
                and ACTNUM from the EGRID_FILE and write them to the
                OUTPUT_FILE. 

             4. In the grid section of the data file, replace
	        include statements including grdecl/zcorn/actnum with
	        the following statement:
 
                IMPORT 
                   '<OUTPUT_FILE>' /

                Where OUTPUT_FILE is the file name you gave on the
                command line. An extra advantage with this is that
                reading grid information into ECLIPSE is considerably
                faster (assuming your EGRID file was binary).


       2.3.5 The parameters to estimate. In some way you have to get
             the parameters to estimate into ECLIPSE. There are many
             ways to do this, but the most common is that you insert a 

             INCLUDE
                 '<FILENAME>' / 
  
             statement into the datafile. The FILENAME should
             typically correspond to the filename given in the
             configuration file, see section 3.3.

             Observe that when estimating full fields, like PERMX and
             PORO, you should use IMPORT instead of include. The
             reason for this is that IMPORT allows the use of binary
             files, which does speed up the reading and writing of
             files considerably.

     

3. About the configuration file. 

3.1 The configuration file is first and only input argument given when
    starting the EnKF application. One of the first things the EnKF
    application does is to decompose the config file argument into a
    leading path part, and the actual filename. It then does a chdir()
    into the path, that means that all paths and files refered to in
    the configuration are interpreted relative to the path given on
    the command line (did that make sense?).



    













   
