import os
import os.path
import sys
sys.path += ["../../build"]
import global_config
from   global_config import LIBUTIL
from   global_config import LIBECL
from   global_config import add_static_library
from   global_config import add_shared_library
from   global_config import add_header
from   global_config import get_targets

package      = "ecl"
lib_path     = "../lib"
slib_path     = "../slib"
include_path = "../include"
bin_path     = "../bin"  

conf = global_config.get_conf(os.getcwd() , package , 2)
env  = Environment()
conf.update_env( env , [ LIBECL , LIBUTIL ] , link = False)

src_list = Split("ecl_grav.c ecl_smspec.c ecl_sum_data.c ecl_util.c ecl_kw.c ecl_sum.c fortio.c ecl_rft_file.c ecl_rft_node.c ecl_grid.c ecl_box.c ecl_io_config.c ecl_file.c ecl_region.c point.c tetrahedron.c")

# tetrahedron.h and point.h are not installed.
header_list = Split("ecl_grav.h ecl_endian_flip.h ecl_smspec.h ecl_sum_data.h ecl_util.h ecl_kw.h ecl_sum.h fortio.h ecl_rft_file.h ecl_rft_node.h ecl_box.h ecl_grid.h ecl_io_config.h ecl_file.h ecl_region.h")


add_static_library( env , conf , lib_path , package , src_list)
add_shared_library( env , conf , slib_path , package , src_list)
add_header( env , conf , include_path , header_list )

(local , SDP_INSTALL) = get_targets( env , conf )
Default( local )
