import os
import os.path
import sys
sys.path += ["../../build"]
import global_config
from   global_config import LIBUTIL
from   global_config import EXTERNAL

SDP_ROOT = ARGUMENTS.get('SDP_ROOT','/d/proj/bg/enkf')
conf = global_config.get_conf(SDP_ROOT , os.getcwd() , 2)
env  = Environment()
conf.update_env( env , [ LIBUTIL , EXTERNAL ] , link = False)

src_list    = Split("plot.c plot_dataset.c  plot_range.c plplot_driver.c plot_driver.c text_driver.c")
header_list = Split("plot.h plot_dataset.h  plot_range.h plot_const.h plot_driver.h  plplot_driver.h text_driver.h")


LIB = env.StaticLibrary("plot" , src_list)
env.Install("../lib" , LIB)
env.Install("../include" , header_list)


##################################################################
 
install     = env.Alias('install',["../lib" , "../include"])

if SDP_ROOT:
   env.Install(conf.SDP_LIB , header_list)
   env.Install(conf.SDP_LIB , LIB )
   SDP_INSTALL = env.Alias('SDP_INSTALL' , [conf.SDP_LIB , conf.SDP_INCLUDE])

Default( install )
