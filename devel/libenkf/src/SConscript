import os
import os.path
import sys
sys.path += ["../../build"]
import global_config
from   global_config import LIBUTIL
from   global_config import LIBECL
from   global_config import LIBCONFIG
from   global_config import LIBRMS
from   global_config import LIBPLOT
from   global_config import LIBSCHED
from   global_config import LIBPLOT
from   global_config import LIBJOB_QUEUE
from   global_config import add_static_library
from   global_config import add_shared_library
from   global_config import add_header
from   global_config import get_targets

package      = "enkf"
lib_path     = "../lib"
slib_path    = "../slib"
include_path = "../include"
bin_path     = "../bin"  

def make_build_info(conf , target_file):
    fileH = open(target_file,"w")
    fileH.write("#define SVN_VERSION        \"%s\"\n" % conf.SVN_VERSION)
    fileH.write("#define COMPILE_TIME_STAMP \"%s\"\n" % conf.TIME_STAMP)
    fileH.close()


conf = global_config.get_conf(os.getcwd() , package , 2)
make_build_info( conf , "ert_build_info.h")
env  = Environment()
conf.update_env( env , [ LIBJOB_QUEUE , LIBCONFIG , LIBRMS , LIBSCHED , LIBECL , LIBPLOT , LIBUTIL ] , link = False)


src_list = Split("scalar.c scalar_config.c trans_func.c enkf_types.c enkf_obs.c obs_data.c field_obs.c meas_vector.c enkf_config_node.c field_config.c field.c ecl_static_kw.c enkf_state.c enkf_util.c enkf_node.c gen_kw_config.c gen_kw.c enkf_fs.c basic_driver.c meas_matrix.c summary_obs.c summary.c summary_config.c gen_data_config.c gen_data.c gen_common.c gen_obs.c enkf_sched.c enkf_serialize.c plain_driver_common.c ecl_config.c enkf_defaults.c ensemble_config.c model_config.c site_config.c gen_data_active.c gen_obs_active.c field_active.c active_list.c obs_vector.c field_trans.c plain_driver_index.c plain_driver.c sqlite3.c sqlite3_driver.c config_parser.c enkf_analysis.c local_ministep.c local_updatestep.c local_config.c analysis_config.c misfit_table.c fs_types.c block_fs_driver.c  block_fs_driver_index.c plot_config.c ert_template.c member_config.c enkf_main.c")

header_list = Split("scalar.h scalar_config.h trans_func.h enkf_obs.h obs_data.h meas_vector.h enkf_config_node.h field_obs.h field_config.h field.h enkf_macros.h ecl_static_kw.h enkf_state.h enkf_util.h enkf_main.h enkf_node.h enkf_fs.h gen_kw_config.h gen_kw.h enkf_types.h basic_driver.h  meas_matrix.h summary_obs.h summary_config.h summary_config.h gen_data_config.h gen_data.h gen_common.h gen_obs.h enkf_sched.h fs_types.h enkf_serialize.h plain_driver_common.h ecl_config.h ensemble_config.h model_config.h site_config.h gen_data_active.h gen_obs_active.h field_active.h active_list.h obs_vector.h field_trans.h plain_driver_index.h plain_driver.h sqlite3.h sqlite3_driver.h config_parser.h enkf_analysis.h local_ministep.h local_updatestep.h local_config.h analysis_config.h misfit_table.h block_fs_driver.h block_fs_driver_index.h field_common.h gen_kw_common.h gen_data_common.h plot_config.h ert_template.h member_config.h enkf_defaults.h ert_build_info.h")

add_static_library( env , conf , lib_path  , package , src_list )
add_shared_library( env , conf , slib_path , package , src_list )

add_header( env , conf , include_path , header_list )



(local , SDP_INSTALL) = get_targets( env , conf )
Default( local )
