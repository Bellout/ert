This README file is a very brief introduction to how to build ERT. ERT
was originally built as an internal tool in Statoil. We have tried
hard to remove arbitrary dependencies on the Statoil computer
infrastructure; in the source code itself there should be very few
Statoil dependencies, but in the build system there are unfortunately
some left. We are working on removing these.

Build instructions:

 1. You need to install scons: http://www.scons.org to build.

 2. You need to install the plplot: http://www.plplot.org plotting
    library; you will need both the header files and the
    library. Observe that we have had some hickups with version
    dependencies on plplot. At Statoil we have used version 5.9.0

    ERT consists of many libraries which are linked statically,
    however plplot is linked dynamically and RPATH is used to embed
    the path to the library to the executable. The plplot functions
    use dlopen() to load low drivers, so plplot usage might fail even
    after the application has booted successfully.

 3. You can set some variables in the file local_config.py (read
    documentation in local_config_DEFAULT.py). If you do not create
    your personal local_config.py file the defaults found in
    local_config_DEFAULT.py will be used. Depending on your setup this
    might be sufficient to compile; but to actually create a usable
    ERT executable you must create a local_config.py file.

 4. Now thing should be ready to build - crosss everything you have
    and start the build with:

        bash% scons -j n

    where n is the number of cores on your workstation. In addition to
    building from the root you can also build from the various
    libraries, i.e.

        bash% cd libutil/src ; scons -j n

    to build only the libutil library, or alternatively:

        bash% cd libecl ; scons -j n

    to build the libecl library and all the eclipse related
    applications in libecl/applications.

  