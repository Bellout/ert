import os
import os.path
import sys
sys.path += ["../../build"]
import global_config
from   global_config import LIBUTIL
from   global_config import LIBECL
from   global_config import EXTERNAL

SDP_ROOT = ARGUMENTS.get('SDP_ROOT','/d/proj/bg/enkf')
if not os.path.exists( SDP_ROOT ):
   SDP_ROOT = None

conf = global_config.get_conf(SDP_ROOT , os.getcwd() , 2)
env  = Environment()
conf.update_env( env , [ LIBECL , LIBUTIL ] )

src_list = Split("sched_history.c sched_time.c sched_blob.c well_history.c sched_types.c sched_kw.c sched_file.c  sched_kw_untyped.c sched_kw_gruptree.c sched_kw_tstep.c sched_kw_dates.c sched_kw_wconhist.c sched_kw_wconinjh.c sched_kw_welspecs.c sched_util.c history.c sched_kw_wconprod.c sched_kw_wconinj.c sched_kw_wconinje.c sched_kw_compdat.c sched_kw_include.c gruptree.c")

header_list = Split("sched_history.h sched_time.h sched_blob.h well_history.h sched_types.h sched_file.h sched_kw.h sched_kw_untyped.h sched_kw_gruptree.h sched_kw_tstep.h sched_kw_dates.h sched_kw_wconhist.h sched_kw_wconinjh.h sched_kw_welspecs.h sched_util.h  history.h sched_kw_wconprod.h sched_kw_wconinj.h  sched_kw_wconinje.h sched_kw_compdat.h sched_kw_include.h sched_macros.h gruptree.h")


LIB = env.StaticLibrary("sched" , src_list)
lib_path     = "../lib"
include_path = "../include"
env.InstallLibrary(lib_path , LIB)
env.InstallHeader(include_path , header_list)
install = env.Alias('install',[lib_path , include_path])

env.InstallHeader(conf.SDP_LIB , header_list)
env.InstallLibrary(conf.SDP_LIB , LIB )
SDP_INSTALL = env.Alias('SDP_INSTALL' , [include_path , conf.SDP_INCLUDE  , conf.SDP_LIB , lib_path ])


install     = env.Alias('install', [lib_path , include_path])
Default( install )


