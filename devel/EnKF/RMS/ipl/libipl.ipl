


// Small utility function to convert an integer to
// a four character long string with zero prefix, 
// i.e. 16 -> "0016".

String FUNCTION make_cnum(Int num)
   String cnum
   Int d4 = Int(num / 1000)
   Int d3 = Int(num - d4 * 1000) / 100
   Int d2 = Int(num - d4 * 1000 - d3 * 100) / 10
   Int d1 = Int(num - d4 * 1000 - d3 * 100 - d2 * 10)

   cnum = d4
   cnum = cnum + d3
   cnum = cnum + d2
   cnum = cnum + d1
   return(cnum)
ENDFUNCTION



FUNCTION LoadField(Int zonenr , String path , String base , Int R1 , Int R2)
   Int i
   String file,cnum
   Zone   Z = @ZONES[zonenr]
   Parameter p   

   SetNumberOfRealizations(R2 - R1 + 1)

   FOR i FROM R1 to R2 DO
      cnum = make_cnum(i)  
      file = path + "/" + base + "_" + cnum + ".ROFF"
      Print("Loading from: ",file)
      SetCurrentRealization(i + 1 - R1)
      IF i = R1 THEN
         ImportRoffParameter(Z , file)
      	 SetShared(Z , base , FALSE)
      ELSE
         ImportRoffParameter(Z , file , p) 
	 SetParameter(Z , base , p)
      ENDIF
   ENDFOR

ENDFUNCTION



FUNCTION LoadStat(Int zonenr , String path , String base)
   Int i
   String file,cnum
   Zone   Z = @ZONES[zonenr]

   file = path + "/AVE-" + base + ".ROFF"
   Print("Loading from: ",file)	
   ImportRoffParameter(Z , file)

   file = path + "/STD-" + base + ".ROFF"
   Print("Loading from: ",file)	
   ImportRoffParameter(Z , file)
ENDFUNCTION




FUNCTION LoadAll(Int zonenr , String path , Int R1 , Int R2)
   Zone Z = @ZONES[zonenr]
   LoadField(zonenr , path , "PERMX" , R1 , R2)
   LoadField(zonenr , path , "PORO" , R1 , R2)
   LoadStat(zonenr , path , "PERMX")
   LoadStat(zonenr , path , "PORO")
ENDFUNCTION



